How did viewing a diff between two versions of a file help you see the bug that was introduced?

Quickly highlighted the rows that changes between the two versions of files,
enabling you to then spot the differences and identify the bug

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Full traceability for the history of the code so you can find out exactly what changes happened and when.  Also useful if you need to roll back to a particualr point in time.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Git is more flexibale and gives you more control.  There is a danger you don't commit often enough or too often but you can decide.  An automatic save / commit is likely going to create far too many commits and is probably not flexible enough

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git is more purpose built for software development and therefore caters for units of work that could span multiple related files.  Google Docs is not so.

How can you use the commands git log and git diff to view the history of files?

git log will show you a list of commits for a given respository, including the commit IDs.  You then use git diff to show differences between two of the commits, which gives details on lines changed

How might using version control make you more confident to make changes that could break something?

You always know you can revert back to a previous version very quickly.  Like having a big safety net!

Now that you have your workspace set up, what do you want to try using Git for?

Will come in handy for the JavaScript course that I want to start soon!